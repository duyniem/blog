{
  
    
        "post0": {
            "title": "Nguoi Ta Da Xung Con Tre La Gi",
            "content": "NGƯỜI TA ĐÃ XƯNG CON TRẺ LÀ GÌ? . . Trong mùa Giáng Sinh, câu Kinh Thánh Ê-sai 9:5 thường được đọc trong giờ thờ phượng hay sử dụng làm câu Kinh Thánh nền tảng cho các bài giảng. Câu Kinh Thánh này liệt kê các danh xưng của Con Trẻ được hứa ban cho loài người, tuy nhiên, trong lịch sử thì danh sách các danh xưng này đã thay đổi nhiều lần tùy theo bản dịch Kinh Thánh. . Bản dịch sớm nhất có câu Kinh Thánh này xuất hiện có lẽ là bộ Targum. Targum là bản dịch Kinh Thánh Cựu Ước tiếng Hê-bơ-rơ sang tiếng A-ram do các rabbi Do Thái Giáo thực hiện. Họ đã dịch như sau: “Và được gọi theo danh Ngài đã có từ xưa, Đấng Mưu Luận Kỳ Diệu, Đức Chúa Trời Quyền Năng, Ngài là Đấng sống đời đời, Đấng Mê-si-a, trong triều đại của Ngài sự bình an sẽ gia tăng trên chúng ta.” Các rabbi đã dịch diễn ý danh xưng “Cha Đời Đời” thành cụm từ “Ngài là Đấng sống đời đời” và xem là thuộc tính của Đức Chúa Trời, giống như thuộc tính quyền năng. Cách dịch này thể hiện quan điểm của Do Thái Giáo là không chấp nhận lời tiên tri về Con Trẻ là Đấng Mê-si-a lại có danh xưng của Đức Chúa Trời, đồng nghĩa với việc xác nhận Đấng Mê-si-a chính là Đức Chúa Trời . . Sau bộ Targum, bản dịch Kinh Thánh Vulgate trong tiếng La-tin đã dịch câu Kinh Thánh này với sáu danh xưng là: “Admirabilis (Đấng Lạ lùng), Consiliarius (Đấng Mưu luận), Deus (Đức Chúa Trời), Fortis (Đấng Quyền năng), Pater futuri saeculi (Cha Đời đời), Princeps pacis (Chúa Bình an).” Không rõ vì sao Thánh Jerome lại dịch thành sáu danh xưng. Phải chăng Thánh Jerome đã sử dụng nguồn bản văn Kinh Thánh Cựu Ước tiếng Hê-bơ-rơ khác với bản văn Kinh Thánh Cựu Ước tiếng Hê-bơ-rơ mà chúng ta đang sử dụng? Thánh Jerome dịch bản Kinh Thánh Vulgate trong khoảng năm 383-405 S.C., còn bản văn Kinh Thánh Cựu Ước chúng ta đang sử dụng là Masoretic Text có khoảng năm 1000 S.C. Dẫu thế nào thì trong hơn 1000 năm, Cơ Đốc Giáo đã gán cho Con Trẻ sáu danh xưng theo cách dịch của bản Kinh Thánh Vulgate. . Cách dịch năm danh xưng là: “Đấng Lạ lùng, Đấng Mưu luận, Đức Chúa Trời Quyền năng, Cha Đời đời, Chúa Bình an” (có lẽ) bắt đầu từ các bản dịch Kinh Thánh trong giai đoạn Cải Chánh. Cách dịch năm danh xưng đã được dùng trong hai bản dịch Kinh Thánh quan trọng là bản dịch Geneva Bible (1560) và bản dịch King James Bible (1611). Tôi không tìm được lý do, hay cách phân tích cấu trúc câu văn tiếng Hê-bơ-rơ của các dịch giả thời Cải Chánh đã dùng để rút gọn sáu danh xưng của Con Trẻ theo như bản Vulgate còn năm danh xưng. Tôi cũng không biết tại sao họ chỉ rút gọn hai danh xưng “Đức Chúa Trời” và “Đấng Toàn Năng” để gộp thành một danh xưng là “Đức Chúa Trời Toàn Năng,” nhưng vẫn giữ hai danh xưng “Đấng Lạ Lùng” và “Đấng Mưu Luận” tách biệt. Cách dịch Con Trẻ với năm danh xưng của các bản dịch Kinh Thánh thời Cải Chánh đã định khuôn cho cách dịch trong bản dịch American Standard Version (1901). Bản dịch American Standard Version có lẽ là bản văn mẫu được ông bà giáo sĩ Cadman sử dụng để dịch bản Kinh Thánh Truyền Thống (1925). . Và cuối cùng cách dịch với bốn danh xưng bắt đầu được sử dụng trong bản dịch Revised Standard Version (1952), các danh xưng đó là: “Ðấng Mưu Luận Lạ Lùng, Ðức Chúa Trời Quyền Năng, Cha Ðời Ðời, Chúa Bình An.” Bản dịch Revised Standard Version sử dụng nhiều công trình nghiên cứu bản văn Kinh Thánh, phân tích cấu trúc, ngữ pháp tiếng Hê-bơ-rơ là các lý do của cách dịch có bốn danh xưng: . Trong tiếng Hê-bơ-rơ, danh xưng (tên gọi) thường là sự kết hợp của hai từ, ví dụ: Ê-sai nghĩa là Chúa—giải cứu, Ê-ma-nu-ên nghĩa là Chúa—ở với chúng ta, v.v… . | Bản văn chép tay trong tiếng Hê-bơ-rơ (Masoretic Text) có các dấu định vị cho sự sắp xếp một cấu trúc với bốn danh xưng. . | Với cấu trúc bốn danh xưng, các danh xưng có cấu trúc đồng nhất. Mỗi danh xưng đều có hai thành phần, thứ nhất liệt kê chức vị của Con Trẻ là: Đấng Mưu Luận, Đức Chúa Trời, Cha, Chúa (hoặc là Vua/Hoàng Tử), và thứ hai liệt kê thuộc tính mô tả chức vị đó: lạ lùng, quyền năng, đời đời và bình an. Chúng ta sẽ dễ nhận ra đặc điểm đồng nhất về cấu trúc này khi viết hoa các chức vị và viết in thường các thuộc tính mô tả chức vị: ÐẤNG MƯU LUẬN lạ lùng, ÐỨC CHÚA TRỜI quyền năng, CHA đời đời, CHÚA bình an. . | Tuy nhiên trong tiếng Hê-bơ-rơ thứ tự của các danh xưng này lại là: lạ lùng (פֶּלֶא) ÐẤNG MƯU LUẬN (יוֹעֵץ) , ÐỨC CHÚA TRỜI (אֵל) quyền năng (גִּבּוֹר), CHA (אֲבִי) đời đời (עַד), CHÚA (שַׂר) bình an (שָׁלוֹם). Do đó, cách sắp xếp bốn danh xưng này phù hợp với một hoặc nhiều cấu trúc đối giao (chiasm) phổ biến trong tiếng Hê-bơ-rơ. Chúng ta có thể thấy hai cặp đối giao đơn, cặp thứ nhất là: . (a) lạ lùng (פֶּלֶא), . (b) ÐẤNG MƯU LUẬN (יוֹעֵץ), (b’) ÐỨC CHÚA TRỜI (אֵל), . (a’) quyền năng (גִּבּוֹר) . và cặp đối giao thứ hai là . (c) CHA (אֲבִי) . (d) đời đời (עַד), . (c’) CHÚA (שַׂר) . (d’) bình an (שָׁלוֹם) . Hoặc chúng ta cũng có thể xem đây là một cấu trúc đối giao phức . (a) lạ lùng (פֶּלֶא), . (b) ÐẤNG MƯU LUẬN (יוֹעֵץ), . (c) ÐỨC CHÚA TRỜI (אֵל), . (d) quyền năng (גִּבּוֹר) . (c’) CHA (אֲבִי) . (d’) đời đời (עַד), . (b’) CHÚA (שַׂר) . (a’) bình an (שָׁלוֹם) . | Hầu hết các bản dịch Kinh Thánh hiện đại đều sử dụng cách dịch bốn danh xưng, tiếng Anh có bản dịch New International Version (1984); New Living Translation (1996), English Standard Version (2001), và nhiều bản dịch khác; còn tiếng Việt thì có: Bản Dịch 2011, Bản Dịch Mới, Bản Phổ Thông, Bản Hiện Đại. Ngoài ra còn phải kể đến các văn phẩm Cơ Đốc thuộc dạng nghiên cứu, khảo luận, giải kinh đa số đều khai triển dàn ý theo cấu trúc Con Trẻ có bốn danh xưng. . . Nguyễn Duy Niệm . Tài liệu tham khảo: Keil, C. F., &amp; Delitzsch, F. (1996). Commentary on the Old Testament. Peabody, MA: Hendrickson. Biblical Studies Press. (2006). The NET Bible First Edition Notes. Biblical Studies Press. Young, E. J. (2000). The Book of Isaiah: English Text with Introduction, Exposition and Notes. Grand Rapids, MI: Wm. B. Eerdmans Publishing Co. Smith, G. V. (2007). Isaiah 1–39. (E. R. Clendenen, Ed.). Nashville: B &amp; H Publishing Group. J. F. Stenning. The Targum of Isaiah (Oxford, 1949). .",
            "url": "https://duyniem.github.io/blog/2021/12/24/Nguoi-ta-da-xung-Con-Tre-la-gi.html",
            "relUrl": "/2021/12/24/Nguoi-ta-da-xung-Con-Tre-la-gi.html",
            "date": " • Dec 24, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://duyniem.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://duyniem.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://duyniem.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://duyniem.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}